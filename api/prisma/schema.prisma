
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Otp {
  id              Int        @id @default(autoincrement())
  email           String 
  otp             String       
  created_at      DateTime    @default(now())
  @@map("otps")
}

model SocialAccount {
  id                Int      @id @default(autoincrement())
  user_id          Int
  provider         String   @db.VarChar(50) // Max length for provider names
  provider_user_id String   @db.VarChar(191) @unique // Unique user ID from the provider
  access_token     String?  // Optional access token
  refresh_token    String?  // Optional refresh token
  expires_at       DateTime? // Optional expiration time for the token
  created_at       DateTime @default(now()) // Timestamp for when the record was created
  updated_at       DateTime @updatedAt // Timestamp for when the record was last updated

  user             User     @relation("UserSocialAccounts", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("social_accounts") // Maps to the actual table name in the database
  @@unique([provider, provider_user_id]) // Unique constraint to prevent duplicates by provider and provider_user_id
}

model User {
  id              Int        @id @default(autoincrement())
  name            String
  email           String     @unique
  password        String
  image           String?
  email_verified_at DateTime?
  dob             DateTime?   
  phone           String? 
  remember_token   String?
  is_admin         Int         @default(0)
  status          Int         @default(1)
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt

  socialAccounts       SocialAccount[]    @relation("UserSocialAccounts")
  @@map("users")
}

